# Generated by Django 5.1.7 on 2025-05-06 16:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('active', 'Activa'), ('completed', 'Completada'), ('cancelled', 'Cancelada')], default='pending', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(default='', max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='influencers_name_39ee3b_idx'), models.Index(fields=['slug'], name='influencers_slug_2e99d2_idx')],
            },
        ),
        migrations.CreateModel(
            name='Influencer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok')], default='instagram', max_length=20)),
                ('followers', models.IntegerField()),
                ('engagement_rate', models.FloatField()),
                ('description', models.TextField()),
                ('price_per_post', models.DecimalField(decimal_places=2, max_digits=10)),
                ('contact_email', models.EmailField(max_length=254)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('is_available', models.BooleanField(default=True)),
                ('categories', models.ManyToManyField(related_name='influencers', to='influencers.category')),
            ],
            options={
                'ordering': ['-followers'],
            },
        ),
        migrations.CreateModel(
            name='CampaignInfluencer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending_review', 'Pendiente de Revisión'), ('review_approved', 'Revisión Aprobada'), ('review_rejected', 'Revisión Rechazada'), ('message_sent', 'Mensaje Enviado'), ('accepted', 'Aceptado'), ('rejected', 'Rechazado'), ('completed', 'Completado')], default='pending_review', max_length=20)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('message_sent_date', models.DateTimeField(blank=True, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='influencers.campaign')),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='influencers.influencer')),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='influencers',
            field=models.ManyToManyField(through='influencers.CampaignInfluencer', to='influencers.influencer'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.IntegerField(choices=[(1, '1 estrella'), (2, '2 estrellas'), (3, '3 estrellas'), (4, '4 estrellas'), (5, '5 estrellas')])),
                ('comment', models.TextField()),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='influencers.campaign')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='influencers.influencer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='influencer',
            index=models.Index(fields=['username'], name='influencers_usernam_eac8e5_idx'),
        ),
        migrations.AddIndex(
            model_name='influencer',
            index=models.Index(fields=['platform'], name='influencers_platfor_4e69c4_idx'),
        ),
        migrations.AddIndex(
            model_name='influencer',
            index=models.Index(fields=['is_available'], name='influencers_is_avai_846a8c_idx'),
        ),
        migrations.AddIndex(
            model_name='campaigninfluencer',
            index=models.Index(fields=['status'], name='influencers_status_1aceaf_idx'),
        ),
        migrations.AddIndex(
            model_name='campaigninfluencer',
            index=models.Index(fields=['message_sent_date'], name='influencers_message_9371ee_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='campaigninfluencer',
            unique_together={('campaign', 'influencer')},
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['status'], name='influencers_status_4b10be_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['start_date'], name='influencers_start_d_3e700a_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['end_date'], name='influencers_end_dat_f060f9_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='influencers_rating_f8b28a_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['created_at'], name='influencers_created_dbf3e7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('campaign', 'influencer', 'company')},
        ),
    ]
